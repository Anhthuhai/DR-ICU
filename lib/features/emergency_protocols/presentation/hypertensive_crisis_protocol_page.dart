import 'package:flutter/material.dart';
import '../../../core/theme/colors.dart';
import 'package:shared_preferences/shared_preferences.dart';

class HypertensiveCrisisProtocolPage extends StatefulWidget {
  const HypertensiveCrisisProtocolPage({super.key});

  @override
  State<HypertensiveCrisisProtocolPage> createState() => _HypertensiveCrisisProtocolPageState();
}

class _HypertensiveCrisisProtocolPageState extends State<HypertensiveCrisisProtocolPage> {
  bool _isBookmarked = false;

  @override
  void initState() {
    super.initState();
    _loadBookmarkStatus();
  }

  Future<void> _loadBookmarkStatus() async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      _isBookmarked = prefs.getBool('bookmark_hypertensive_crisis') ?? false;
    });
  }

  Future<void> _toggleBookmark() async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      _isBookmarked = !_isBookmarked;
    });
    await prefs.setBool('bookmark_hypertensive_crisis', _isBookmarked);
    
    if (mounted) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text(_isBookmarked ? 'ƒê√£ th√™m v√†o bookmark' : 'ƒê√£ x√≥a kh·ªèi bookmark'),
          duration: const Duration(seconds: 2),
          backgroundColor: _isBookmarked ? Colors.green : Colors.grey,
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[50],
      appBar: AppBar(
        title: const Text(
          'C∆°n TƒÉng Huy·∫øt √Åp',
          style: TextStyle(fontWeight: FontWeight.bold),
        ),
        backgroundColor: AppColors.primary,
        foregroundColor: Colors.white,
        elevation: 0,
        actions: [
          IconButton(
            icon: Icon(_isBookmarked ? Icons.bookmark : Icons.bookmark_border),
            onPressed: _toggleBookmark,
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            // Header with vital signs
            Container(
              width: double.infinity,
              padding: const EdgeInsets.all(20),
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                  colors: [
                    Colors.red.shade400,
                    Colors.red.shade500,
                  ],
                ),
              ),
              child: const Column(
                children: [
                  Icon(
                    Icons.favorite,
                    color: Colors.white,
                    size: 48,
                  ),
                  SizedBox(height: 12),
                  Text(
                    'HYPERTENSIVE CRISIS',
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                    textAlign: TextAlign.center,
                  ),
                  SizedBox(height: 8),
                  Text(
                    'Huy·∫øt √°p ‚â• 180/120 mmHg',
                    style: TextStyle(
                      fontSize: 16,
                      color: Colors.white,
                      fontWeight: FontWeight.w500,
                    ),
                    textAlign: TextAlign.center,
                  ),
                ],
              ),
            ),
            
            Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                children: [
                  // Emergency Algorithm
                  _buildProtocolCard(
                    title: 'üö® S∆† ƒê·ªí TI·∫æP C·∫¨N X·ª¨ TR√ç C·∫§P C·ª®U',
                    icon: Icons.account_tree,
                    color: Colors.red,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Container(
                          padding: const EdgeInsets.all(16),
                          decoration: BoxDecoration(
                            color: Colors.red.shade50,
                            borderRadius: BorderRadius.circular(12),
                            border: Border.all(color: Colors.red.shade200, width: 2),
                          ),
                          child: Column(
                            children: [
                              // Step 1: Assessment
                              _buildAlgorithmStep(
                                stepNumber: '1',
                                title: 'ƒê√ÅNH GI√Å BAN ƒê·∫¶U',
                                content: 'BP ‚â• 180/120 mmHg + Tri·ªáu ch·ª©ng?',
                                color: Colors.red,
                                isFirst: true,
                              ),
                              
                              // Decision branch
                              const SizedBox(height: 8),
                              Column(
                                children: [
                                  _buildDecisionBranch(
                                    condition: 'C√ì tri·ªáu ch·ª©ng\nt·ªïn th∆∞∆°ng c∆° quan ƒë√≠ch',
                                    outcome: 'HYPERTENSIVE\nEMERGENCY',
                                    color: Colors.red,
                                    isEmergency: true,
                                  ),
                                  const SizedBox(height: 12),
                                  _buildDecisionBranch(
                                    condition: 'KH√îNG c√≥\ntri·ªáu ch·ª©ng',
                                    outcome: 'HYPERTENSIVE\nURGENCY',
                                    color: Colors.orange,
                                    isEmergency: false,
                                  ),
                                ],
                              ),
                              
                              const SizedBox(height: 16),
                              
                              // Step 2: Emergency Management
                              _buildAlgorithmStep(
                                stepNumber: '2',
                                title: 'X·ª¨ TR√ç C·∫§P C·ª®U',
                                content: 'EMERGENCY: Gi·∫£m BP 10-20% trong 1h ƒë·∫ßu\nURGENCY: Gi·∫£m BP trong 24-48h',
                                color: Colors.blue,
                              ),
                              
                              const SizedBox(height: 12),
                              
                              // Step 3: Drug selection
                              _buildAlgorithmStep(
                                stepNumber: '3',
                                title: 'CH·ªåN THU·ªêC',
                                content: 'Emergency: IV (Nicardipine, Esmolol)\nUrgency: PO (Amlodipine, Captopril)',
                                color: Colors.green,
                              ),
                              
                              const SizedBox(height: 12),
                              
                              // Step 4: Monitoring
                              _buildAlgorithmStep(
                                stepNumber: '4',
                                title: 'THEO D√ïI',
                                content: 'BP m·ªói 5-15 ph√∫t\nTri·ªáu ch·ª©ng th·∫ßn kinh\nCh·ª©c nƒÉng c∆° quan',
                                color: Colors.purple,
                                isLast: true,
                              ),
                            ],
                          ),
                        ),
                        
                        const SizedBox(height: 16),
                        
                        // Quick reference table
                        Container(
                          padding: const EdgeInsets.all(12),
                          decoration: BoxDecoration(
                            color: Colors.grey.shade100,
                            borderRadius: BorderRadius.circular(8),
                            border: Border.all(color: Colors.grey.shade300),
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              const Text(
                                'üìã B·∫¢NG THAM KH·∫¢O NHANH:',
                                style: TextStyle(
                                  fontWeight: FontWeight.bold,
                                  fontSize: 14,
                                  color: Colors.black87,
                                ),
                              ),
                              const SizedBox(height: 8),
                              const Column(
                                children: [
                                  Text(
                                    'üî¥ EMERGENCY:\n‚Ä¢ ƒêau ng·ª±c\n‚Ä¢ Kh√≥ th·ªü\n‚Ä¢ ƒêau ƒë·∫ßu + bu·ªìn n√¥n\n‚Ä¢ R·ªëi lo·∫°n th·ªã gi√°c\n‚Ä¢ Y·∫øu li·ªát',
                                    style: TextStyle(fontSize: 12, height: 1.3),
                                  ),
                                  SizedBox(height: 12),
                                  Text(
                                    'üü° URGENCY:\n‚Ä¢ Kh√¥ng tri·ªáu ch·ª©ng\n‚Ä¢ ƒêau ƒë·∫ßu nh·∫π\n‚Ä¢ Ch√≥ng m·∫∑t\n‚Ä¢ M·ªát m·ªèi\n‚Ä¢ Lo √¢u',
                                    style: TextStyle(fontSize: 12, height: 1.3),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Classification
                  _buildProtocolCard(
                    title: '1. PH√ÇN LO·∫†I',
                    icon: Icons.category,
                    color: Colors.orange,
                    child: Column(
                      children: [
                        _buildClassificationItem(
                          'TƒÉng huy·∫øt √°p kh·∫©n tr∆∞∆°ng\n(Hypertensive Urgency)',
                          'HA ‚â• 180/120 mmHg\nKH√îNG c√≥ t·ªïn th∆∞∆°ng c∆° quan ƒë√≠ch',
                          Colors.orange.shade100,
                          Colors.orange.shade600,
                        ),
                        const SizedBox(height: 12),
                        _buildClassificationItem(
                          'TƒÉng huy·∫øt √°p c·∫•p c·ª©u\n(Hypertensive Emergency)',
                          'HA ‚â• 180/120 mmHg\nC√ì t·ªïn th∆∞∆°ng c∆° quan ƒë√≠ch',
                          Colors.red.shade100,
                          Colors.red.shade600,
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Initial Assessment
                  _buildProtocolCard(
                    title: '2. ƒê√ÅNH GI√Å BAN ƒê·∫¶U',
                    icon: Icons.assessment,
                    color: Colors.blue,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        _buildChecklistItem('ƒêo huy·∫øt √°p 2 tay, x√°c nh·∫≠n gi√° tr·ªã'),
                        _buildChecklistItem('Ti·ªÅn s·ª≠ tƒÉng huy·∫øt √°p, thu·ªëc ƒëang d√πng'),
                        _buildChecklistItem('Tri·ªáu ch·ª©ng th·∫ßn kinh: ƒëau ƒë·∫ßu, nh√¨n m·ªù, co gi·∫≠t'),
                        _buildChecklistItem('Tri·ªáu ch·ª©ng tim m·∫°ch: ƒëau ng·ª±c, kh√≥ th·ªü'),
                        _buildChecklistItem('Kh√°m th·∫ßn kinh, tim ph·ªïi, m·∫Øt (v√µng m·∫°c)'),
                        _buildChecklistItem('C·∫≠n l√¢m s√†ng c·∫•p c·ª©u'),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Paraclinical Tests
                  _buildProtocolCard(
                    title: '3. C·∫¨N L√ÇM S√ÄNG',
                    icon: Icons.biotech,
                    color: Colors.purple,
                    child: Column(
                      children: [
                        _buildTestCard(
                          'X√âT NGHI·ªÜM M√ÅU',
                          [
                            'CTM, CRP',
                            'Glucose, Creatinine, Urea',
                            'Troponin T/I',
                            'D-dimer, PT-INR',
                            'ƒêi·ªán gi·∫£i ƒë·ªì (Na+, K+)',
                          ],
                          Colors.purple.shade50,
                        ),
                        const SizedBox(height: 12),
                        _buildTestCard(
                          'H√åNH ·∫¢NH',
                          [
                            'X-quang ng·ª±c',
                            'CT n√£o (n·∫øu c√≥ tri·ªáu ch·ª©ng th·∫ßn kinh)',
                            'Si√™u √¢m tim (n·∫øu nghi ng·ªù suy tim)',
                          ],
                          Colors.blue.shade50,
                        ),
                        const SizedBox(height: 12),
                        _buildTestCard(
                          'KH√ÅC',
                          [
                            'ECG 12 chuy·ªÉn ƒë·∫°o',
                            'N∆∞·ªõc ti·ªÉu t·ªïng qu√°t',
                            'Kh√°m ƒë√°y m·∫Øt (n·∫øu c√≥ ƒëi·ªÅu ki·ªán)',
                          ],
                          Colors.green.shade50,
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Treatment Protocol
                  _buildProtocolCard(
                    title: '4. X·ª¨ L√ù ƒêI·ªÄU TR·ªä',
                    icon: Icons.medical_services,
                    color: Colors.green,
                    child: Column(
                      children: [
                        // Hypertensive Urgency
                        Container(
                          padding: const EdgeInsets.all(16),
                          decoration: BoxDecoration(
                            color: Colors.orange.shade50,
                            border: Border.all(color: Colors.orange.shade200),
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Row(
                                children: [
                                  Icon(Icons.warning_amber, color: Colors.orange.shade600),
                                  const SizedBox(width: 8),
                                  Expanded(
                                    child: Text(
                                      'TƒÇNG HUY·∫æT √ÅP KH·∫®N TR∆Ø∆†NG',
                                      style: TextStyle(
                                        fontSize: 15,
                                        fontWeight: FontWeight.bold,
                                        color: Colors.orange.shade700,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              const SizedBox(height: 12),
                              _buildTreatmentStep('1', 'Ngh·ªâ ng∆°i trong m√¥i tr∆∞·ªùng y√™n tƒ©nh'),
                              _buildTreatmentStep('2', 'Gi·∫£m HA 10-20% trong 24-48h ƒë·∫ßu'),
                              _buildTreatmentStep('3', 'Thu·ªëc ƒë∆∞·ªùng u·ªëng:\n'
                                  '‚Ä¢ Amlodipine 5-10mg\n'
                                  '‚Ä¢ Captopril 25mg x 2-3 l·∫ßn/ng√†y\n'
                                  '‚Ä¢ Nifedipine SR 20mg x 2 l·∫ßn/ng√†y'),
                              _buildTreatmentStep('4', 'Theo d√µi HA m·ªói 30 ph√∫t'),
                            ],
                          ),
                        ),
                        
                        const SizedBox(height: 16),
                        
                        // Hypertensive Emergency
                        Container(
                          padding: const EdgeInsets.all(16),
                          decoration: BoxDecoration(
                            color: Colors.red.shade50,
                            border: Border.all(color: Colors.red.shade200),
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Row(
                                children: [
                                  Icon(Icons.emergency, color: Colors.red.shade600),
                                  const SizedBox(width: 8),
                                  Expanded(
                                    child: Text(
                                      'TƒÇNG HUY·∫æT √ÅP C·∫§P C·ª®U',
                                      style: TextStyle(
                                        fontSize: 15,
                                        fontWeight: FontWeight.bold,
                                        color: Colors.red.shade700,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                              const SizedBox(height: 12),
                              _buildTreatmentStep('1', 'Gi·∫£m HA 10-20% trong 1h ƒë·∫ßu'),
                              _buildTreatmentStep('2', 'Gi·∫£m th√™m t·ªõi 25% trong 2-6h ti·∫øp theo'),
                              _buildTreatmentStep('3', 'Thu·ªëc ti√™m tƒ©nh m·∫°ch:\n'
                                  '‚Ä¢ Nicardipine 5-15mg/h\n'
                                  '‚Ä¢ Esmolol 50-300mcg/kg/min\n'
                                  '‚Ä¢ Labetalol 20mg IV, l·∫∑p l·∫°i m·ªói 10 ph√∫t'),
                              _buildTreatmentStep('4', 'Theo d√µi HA li√™n t·ª•c (monitor)'),
                              _buildTreatmentStep('5', 'X·ª≠ l√Ω t·ªïn th∆∞∆°ng c∆° quan ƒë√≠ch'),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Complications Management
                  _buildProtocolCard(
                    title: '5. X·ª¨ L√ù BI·∫æN CH·ª®NG',
                    icon: Icons.healing,
                    color: Colors.teal,
                    child: Column(
                      children: [
                        _buildComplicationCard(
                          'Ph√π n√£o - Encephalopathy',
                          'Gi·∫£m HA 20% trong 1h\nMannitol 0.5-1g/kg IV\nCh·ªëng co gi·∫≠t',
                          Colors.red.shade100,
                          Icons.psychology,
                        ),
                        const SizedBox(height: 12),
                        _buildComplicationCard(
                          'Ph√π ph·ªïi c·∫•p',
                          'Gi·∫£m HA nhanh\nFurosemide 40-80mg IV\nNTG 0.3-0.6mg',
                          Colors.blue.shade100,
                          Icons.air,
                        ),
                        const SizedBox(height: 12),
                        _buildComplicationCard(
                          'B√≥c t√°ch ƒë·ªông m·∫°ch ch·ªß',
                          'Gi·∫£m HA m·ª•c ti√™u <120mmHg\nEsmolol + Nicardipine\nG·ªçi ph·∫´u thu·∫≠t ngay',
                          Colors.orange.shade100,
                          Icons.warning,
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Monitoring
                  _buildProtocolCard(
                    title: '6. THEO D√ïI',
                    icon: Icons.monitor_heart,
                    color: Colors.indigo,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        _buildMonitoringItem('Huy·∫øt √°p', 'M·ªói 15 ph√∫t (1h ƒë·∫ßu) ‚Üí 30 ph√∫t ‚Üí 1h'),
                        _buildMonitoringItem('M·∫°ch, SpO2', 'Li√™n t·ª•c'),
                        _buildMonitoringItem('√ù th·ª©c', 'Glasgow Coma Scale'),
                        _buildMonitoringItem('N∆∞·ªõc ti·ªÉu', 'Theo d√µi b·∫±ng catheter'),
                        _buildMonitoringItem('ƒêi·ªán gi·∫£i', 'M·ªói 6-12h'),
                        _buildMonitoringItem('Th·∫ßn kinh', 'Tri·ªáu ch·ª©ng th·∫ßn kinh h·ªçc'),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Warning Box
                  Container(
                    width: double.infinity,
                    padding: const EdgeInsets.all(16),
                    decoration: BoxDecoration(
                      color: Colors.amber.shade50,
                      border: Border.all(color: Colors.amber.shade300, width: 2),
                      borderRadius: BorderRadius.circular(12),
                    ),
                    child: Column(
                      children: [
                        Row(
                          children: [
                            Icon(Icons.warning, color: Colors.amber.shade700, size: 28),
                            const SizedBox(width: 12),
                            Expanded(
                              child: Text(
                                'L∆ØU √ù QUAN TR·ªåNG',
                                style: TextStyle(
                                  fontSize: 15,
                                  fontWeight: FontWeight.bold,
                                  color: Colors.amber.shade700,
                                ),
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(height: 12),
                        const Text(
                          '‚Ä¢ KH√îNG gi·∫£m huy·∫øt √°p qu√° nhanh (tr√°nh thi·∫øu m√°u n√£o, tim, th·∫≠n)\n'
                          '‚Ä¢ TR√ÅNH thu·ªëc ng·∫≠m d∆∞·ªõi l∆∞·ª°i (Nifedipine ng·∫≠m)\n'
                          '‚Ä¢ ƒêi·ªÅu ch·ªânh thu·ªëc d·ª±a tr√™n ƒë√°p ·ª©ng l√¢m s√†ng\n'
                          '‚Ä¢ Chuy·ªÉn tuy·∫øn tr√™n n·∫øu kh√¥ng ki·ªÉm so√°t ƒë∆∞·ª£c',
                          style: TextStyle(
                            fontSize: 14,
                            height: 1.5,
                          ),
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Discussion and Clinical Debates
                  _buildProtocolCard(
                    title: '7. B√ÄN LU·∫¨N & TRANH LU·∫¨N L√ÇM S√ÄNG (5 c√¢u h·ªèi)',
                    icon: Icons.question_answer,
                    color: Colors.deepOrange,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        _buildDiscussionPoint(
                          'V·∫•n ƒë·ªÅ th∆∞·ªùng g·∫∑p',
                          '‚Ä¢ Gi·∫£m HA qu√° nhanh: G√¢y thi·∫øu m√°u n√£o, ƒë·ªôt qu·ªµ th·ª© ph√°t\n'
                          '‚Ä¢ Kh√¥ng ph√¢n bi·ªát ƒë∆∞·ª£c Urgency vs Emergency\n'
                          '‚Ä¢ D√πng Nifedipine ng·∫≠m: G√¢y h·∫° HA ƒë·ªôt ng·ªôt, nguy hi·ªÉm\n'
                          '‚Ä¢ Kh√¥ng theo d√µi ch·∫∑t ch·∫Ω: B·ªè l·ª° bi·∫øn ch·ª©ng\n'
                          '‚Ä¢ Ch·∫≠m chuy·ªÉn tuy·∫øn: Tr√¨ ho√£n ƒëi·ªÅu tr·ªã chuy√™n khoa',
                        ),
                        const SizedBox(height: 12),
                        _buildDiscussionPoint(
                          'Khuy·∫øn ngh·ªã th·ª±c h√†nh',
                          '‚Ä¢ Lu√¥n ƒëo HA 2 tay, x√°c nh·∫≠n k·ªπ thu·∫≠t ƒëo\n'
                          '‚Ä¢ ƒê√°nh gi√° t·ªïn th∆∞∆°ng c∆° quan ƒë√≠ch l√† ∆∞u ti√™n\n'
                          '‚Ä¢ M·ª•c ti√™u gi·∫£m HA: t·ª´ t·ª´, an to√†n\n'
                          '‚Ä¢ Theo d√µi th·∫ßn kinh, tim ph·ªïi li√™n t·ª•c\n'
                          '‚Ä¢ Ghi ch√©p chi ti·∫øt ƒë·ªÉ ƒë√°nh gi√° ƒë√°p ·ª©ng',
                        ),
                        const SizedBox(height: 12),
                        _buildDiscussionPoint(
                          'Tranh lu·∫≠n l√¢m s√†ng 1',
                          '‚ùì T√¨nh hu·ªëng: BN nh·∫≠p vi·ªán HA 240/130, ƒëau ƒë·∫ßu, x√¢y x·∫©m v·ª´a, ch∆∞a c√≥ d·∫•u th·∫ßn kinh ƒë·ªãnh v·ªã\n\n'
                          'ü§î C√¢u h·ªèi: C√≥ c·∫ßn h·∫° HA kh·∫©n b·∫±ng thu·ªëc TM tr∆∞·ªõc khi ch·ª•p CT?\n\n'
                          'üí° Tr·∫£ l·ªùi:\n'
                          '‚Ä¢ KH√îNG n√™n h·∫° HA qu√° nhanh tr∆∞·ªõc CT\n'
                          '‚Ä¢ M·ª©c HA n√†y c√≥ th·ªÉ do stress, lo l·∫Øng\n'
                          '‚Ä¢ ∆Øu ti√™n: ƒê√°nh gi√° nhanh ‚Üí CT n√£o ngay\n'
                          '‚Ä¢ Cho thu·ªëc u·ªëng nh·∫π (Captopril 25mg) n·∫øu c·∫ßn\n'
                          '‚Ä¢ Gi·∫£m HA ch·ªâ 10-15% trong 1h ƒë·∫ßu\n\n'
                          'üìã Khi CT b√¨nh th∆∞·ªùng:\n'
                          '‚Ä¢ X√°c ƒë·ªãnh ƒë√¢y l√† THA kh·∫©n tr∆∞∆°ng\n'
                          '‚Ä¢ ƒêi·ªÅu tr·ªã b·∫±ng thu·ªëc u·ªëng\n'
                          '‚Ä¢ M·ª•c ti√™u: Gi·∫£m HA 10-20% trong 24-48h\n'
                          '‚Ä¢ Theo d√µi HA m·ªói 30 ph√∫t\n'
                          '‚Ä¢ T√¨m nguy√™n nh√¢n th·ª© ph√°t n·∫øu c√≥',
                        ),
                        const SizedBox(height: 12),
                        _buildDiscussionPoint(
                          'Tranh lu·∫≠n l√¢m s√†ng 2',
                          '‚ùì T√¨nh hu·ªëng: Ph√π ph·ªïi c·∫•p do c∆°n THA c·∫•p c·ª©u\n\n'
                          'ü§î C√¢u h·ªèi: T·∫°i sao d√πng Nitroglycerin? C√≥ th·ªÉ thay b·∫±ng Nicardipine?\n\n'
                          'üß¨ Nitroglycerin - C∆° ch·∫ø sinh h·ªçc:\n'
                          '‚Ä¢ Gi·∫£i ph√≥ng NO (nitric oxide) trong t·∫ø b√†o c∆° tr∆°n\n'
                          '‚Ä¢ K√≠ch ho·∫°t guanylate cyclase ‚Üí tƒÉng cGMP\n'
                          '‚Ä¢ Gi√£n tƒ©nh m·∫°ch >> ƒë·ªông m·∫°ch (t·ª∑ l·ªá 10:1)\n'
                          '‚Ä¢ Gi·∫£m venous return ‚Üí gi·∫£m ti·ªÅn t·∫£i nhanh\n'
                          '‚Ä¢ Li·ªÅu: 0.3-0.6mg ng·∫≠m ho·∫∑c 10-20mcg/min IV\n'
                          '‚Ä¢ Hi·ªáu qu·∫£: 2-5 ph√∫t\n\n'
                          'üß¨ Nicardipine - C∆° ch·∫ø sinh h·ªçc:\n'
                          '‚Ä¢ Ch·∫πn k√™nh Ca¬≤‚Å∫ type L ·ªü c∆° tr∆°n m·∫°ch m√°u\n'
                          '‚Ä¢ NgƒÉn Ca¬≤‚Å∫ v√†o t·∫ø b√†o ‚Üí gi·∫£m co c∆° tr∆°n\n'
                          '‚Ä¢ Gi√£n ƒë·ªông m·∫°ch >> tƒ©nh m·∫°ch\n'
                          '‚Ä¢ Gi·∫£m h·∫≠u t·∫£i (afterload) ‚Üí gi·∫£m huy·∫øt √°p\n'
                          '‚Ä¢ C√≥ th·ªÉ tƒÉng t·∫ßn s·ªë tim ph·∫£n x·∫°\n\n'
                          'ÔøΩ T·∫°i sao gi·∫£m ti·ªÅn t·∫£i tr∆∞·ªõc trong ph√π ph·ªïi?\n'
                          '‚Ä¢ Ph√π ph·ªïi = qu√° t·∫£i th·ªÉ t√≠ch + √°p l·ª±c mao m·∫°ch ph·ªïi cao\n'
                          '‚Ä¢ Ti·ªÅn t·∫£i cao ‚Üí tƒÉng √°p l·ª±c nhƒ© tr√°i ‚Üí ·ª© m√°u ph·ªïi\n'
                          '‚Ä¢ Gi·∫£m ti·ªÅn t·∫£i ‚Üí gi·∫£m venous return ‚Üí gi·∫£m √°p l·ª±c mao m·∫°ch ph·ªïi ngay\n'
                          '‚Ä¢ H·∫≠u t·∫£i ch·ªâ ·∫£nh h∆∞·ªüng gi√°n ti·∫øp qua c·∫£i thi·ªán ch·ª©c nƒÉng tim\n'
                          '‚Ä¢ ∆Øu ti√™n: D·∫´n l∆∞u "b·ªÉ ch·ª©a" ph·ªïi tr∆∞·ªõc, sau ƒë√≥ t·ªëi ∆∞u b∆°m tim\n\n'
                          '‚öñÔ∏è Nicardipine - Khi n√†o d√πng ƒë∆∞·ª£c?\n'
                          '‚Ä¢ Sau khi ƒë√£ ki·ªÉm so√°t ·ª© ph·ªïi b·∫±ng Nitroglycerin\n'
                          '‚Ä¢ EF tim > 40%, huy·∫øt ƒë·ªông ·ªïn ƒë·ªãnh\n'
                          '‚Ä¢ ƒê·ªÉ ki·ªÉm so√°t huy·∫øt √°p d√†i h·∫°n\n'
                          '‚Ä¢ Li·ªÅu: 5-15mg/h, tƒÉng t·ª´ t·ª´',
                        ),
                        const SizedBox(height: 12),
                        _buildDiscussionPoint(
                          'Tranh lu·∫≠n l√¢m s√†ng 3',
                          '‚ùì Nitroglycerin ng·∫≠m vs truy·ªÅn tƒ©nh m·∫°ch - D·∫°ng n√†o t·ªët h∆°n?\n\n'
                          'üíä Nitroglycerin ng·∫≠m (0.3-0.6mg):\n'
                          '‚Ä¢ ∆Øu ƒëi·ªÉm: C√≥ s·∫µn, d√πng nhanh\n'
                          '‚Ä¢ Nh∆∞·ª£c ƒëi·ªÉm:\n'
                          '  - H·∫•p thu kh√¥ng ƒë·ªÅu qua ni√™m m·∫°c\n'
                          '  - Kh√¥ng ki·ªÉm so√°t ƒë∆∞·ª£c li·ªÅu\n'
                          '  - T√°c d·ª•ng k√©o d√†i 30-60 ph√∫t\n'
                          '  - Nguy c∆° h·∫° HA qu√° nhanh, kh√¥ng th·ªÉ d·ª´ng ngay\n'
                          '  - Kh√¥ng ph√π h·ª£p v·ªõi BN n√¥n, √≥i\n\n'
                          'üíâ Nitroglycerin truy·ªÅn tƒ©nh m·∫°ch (10-20mcg/min):\n'
                          '‚Ä¢ ∆Øu ƒëi·ªÉm:\n'
                          '  - Ki·ªÉm so√°t ch√≠nh x√°c li·ªÅu l∆∞·ª£ng\n'
                          '  - TƒÉng/gi·∫£m li·ªÅu theo ƒë√°p ·ª©ng\n'
                          '  - Ng∆∞ng ngay l·∫≠p t·ª©c n·∫øu h·∫° HA qu√° nhanh\n'
                          '  - Hi·ªáu qu·∫£ ·ªïn ƒë·ªãnh, c√≥ th·ªÉ d·ª± ƒëo√°n\n'
                          '  - Ph√π h·ª£p ICU, theo d√µi ch·∫∑t ch·∫Ω\n'
                          '‚Ä¢ Nh∆∞·ª£c ƒëi·ªÉm: C·∫ßn pump ti√™m, theo d√µi monitor\n\n'
                          'üèÜ K·∫øt lu·∫≠n: Trong ph√π ph·ªïi c·∫•p, ∆∞u ti√™n Nitroglycerin IV v√¨:\n'
                          '‚Ä¢ An to√†n h∆°n - c√≥ th·ªÉ ki·ªÉm so√°t\n'
                          '‚Ä¢ Hi·ªáu qu·∫£ h∆°n - li·ªÅu ch√≠nh x√°c\n'
                          '‚Ä¢ Ph√π h·ª£p v·ªõi m√¥i tr∆∞·ªùng ICU/CCU',
                        ),
                        const SizedBox(height: 12),
                        _buildDiscussionPoint(
                          'Tranh lu·∫≠n l√¢m s√†ng 4',
                          '‚ùì Ph√π n√£o do THA c·∫•p c·ª©u - CT scan c√≥ lo·∫°i tr·ª´ ƒë∆∞·ª£c kh√¥ng?\n\n'
                          'üß† Ph√π n√£o (Hypertensive Encephalopathy):\n'
                          '‚Ä¢ C∆° ch·∫ø: √Åp l·ª±c t∆∞·ªõi m√°u n√£o qu√° cao ‚Üí v·ª° h√†ng r√†o m√°u-n√£o\n'
                          '‚Ä¢ Ph√π n√£o lan t·ªèa, kh√¥ng ƒë·ªãnh v·ªã\n'
                          '‚Ä¢ C√≥ th·ªÉ h·ªìi ph·ª•c n·∫øu ƒëi·ªÅu tr·ªã k·ªãp th·ªùi\n\n'
                          'üîç CT scan c√≥ lo·∫°i tr·ª´ ƒë∆∞·ª£c ph√π n√£o?\n'
                          '‚Ä¢ CT th∆∞·ªùng B√åNH TH∆Ø·ªúNG trong giai ƒëo·∫°n ƒë·∫ßu\n'
                          '‚Ä¢ Ph√π n√£o lan t·ªèa kh√≥ ph√°t hi·ªán tr√™n CT\n'
                          '‚Ä¢ CT ch·ªâ th·∫•y khi ph√π n√£o n·∫∑ng, mu·ªôn\n'
                          '‚Ä¢ MRI nh·∫°y h∆°n (FLAIR, DWI) nh∆∞ng kh√¥ng c·∫•p c·ª©u\n\n'
                          'üö® Khi n√†o nghi ph√π n√£o?\n'
                          '‚Ä¢ HA > 180/120 + tri·ªáu ch·ª©ng th·∫ßn kinh c·∫•p t√≠nh:\n'
                          '  - ƒêau ƒë·∫ßu d·ªØ d·ªôi, bu·ªìn n√¥n/n√¥n\n'
                          '  - R·ªëi lo·∫°n √Ω th·ª©c (l√∫ l·∫´n, li b√¨)\n'
                          '  - R·ªëi lo·∫°n th·ªã gi√°c (nh√¨n m·ªù, m√π t·∫°m th·ªùi)\n'
                          '  - Co gi·∫≠t to√†n th·ªÉ ho·∫∑c khu tr√∫\n'
                          '  - Li·ªát/y·∫øu chi, r·ªëi lo·∫°n ng√¥n ng·ªØ\n\n'
                          '‚ö†Ô∏è Ch·∫©n ƒëo√°n ph√π n√£o:\n'
                          '‚Ä¢ D·ª±a v√†o L√ÇM S√ÄNG, kh√¥ng d·ª±a v√†o CT\n'
                          '‚Ä¢ CT ch·ªâ ƒë·ªÉ lo·∫°i tr·ª´ ch·∫£y m√°u, nh·ªìi m√°u\n'
                          '‚Ä¢ Nguy√™n t·∫Øc: C√≥ tri·ªáu ch·ª©ng th·∫ßn kinh + HA cao = nghi ph√π n√£o\n'
                          '‚Ä¢ ƒêi·ªÅu tr·ªã ngay, kh√¥ng ch·ªù CT c√≥ ph√π n√£o\n\n'
                          'üíä X·ª≠ l√Ω:\n'
                          '‚Ä¢ Gi·∫£m HA 20% trong 1h (Nicardipine IV)\n'
                          '‚Ä¢ Mannitol 0.5-1g/kg n·∫øu ph√π n√£o n·∫∑ng\n'
                          '‚Ä¢ Ch·ªëng co gi·∫≠t (Diazepam, Phenytoin)',
                        ),
                        const SizedBox(height: 12),
                        _buildDiscussionPoint(
                          'Tranh lu·∫≠n l√¢m s√†ng 5',
                          '‚ùì Suy th·∫≠n c·∫•p trong c∆°n THA - C∆° ch·∫ø n√†o quan tr·ªçng nh·∫•t?\n\n'
                          'ü´ò C∆° ch·∫ø sinh b·ªánh suy th·∫≠n c·∫•p trong THA:\n'
                          '1Ô∏è‚É£ HO·∫†I T·ª¨ C·∫§P ·ªêNG TH·∫¨N (ATN):\n'
                          '‚Ä¢ C∆° ch·∫ø ch·ªß y·∫øu: Thi·∫øu m√°u c·ª•c b·ªô do co m·∫°ch th·∫≠n\n'
                          '‚Ä¢ HA tƒÉng ƒë·ªôt ng·ªôt ‚Üí co m·∫°ch ti·ªÉu ƒë·ªông m·∫°ch c·∫ßu th·∫≠n ƒë·∫øn\n'
                          '‚Ä¢ Gi·∫£m l∆∞u l∆∞·ª£ng m√°u th·∫≠n ‚Üí thi·∫øu oxy t·∫ø b√†o ·ªëng th·∫≠n\n'
                          '‚Ä¢ Ho·∫°i t·ª≠ t·∫ø b√†o ·ªëng th·∫≠n g·∫ßn v√† xa\n\n'
                          '2Ô∏è‚É£ VI HUY·∫æT KH·ªêI (Microthrombi):\n'
                          '‚Ä¢ T·ªïn th∆∞∆°ng n·ªôi m√¥ mao m·∫°ch th·∫≠n\n'
                          '‚Ä¢ K√≠ch ho·∫°t ƒë√¥ng m√°u ‚Üí huy·∫øt kh·ªëi nh·ªè\n'
                          '‚Ä¢ T·∫Øc mao m·∫°ch c·∫ßu th·∫≠n\n\n'
                          '3Ô∏è‚É£ HO·∫†I T·ª¨ M·∫†CH M√ÅU TH·∫¨N:\n'
                          '‚Ä¢ T·ªïn th∆∞∆°ng tr·ª±c ti·∫øp th√†nh m·∫°ch\n'
                          '‚Ä¢ Xu·∫•t huy·∫øt, ho·∫°i t·ª≠ th√†nh ƒë·ªông m·∫°ch nh·ªè\n'
                          '‚Ä¢ Ph√π n·ªÅ, vi√™m quanh m·∫°ch\n\n'
                          'üî¨ Bi·ªÉu hi·ªán l√¢m s√†ng:\n'
                          '‚Ä¢ Tri·ªáu ch·ª©ng S·ªöM (6-12h):\n'
                          '  - Gi·∫£m l∆∞·ª£ng n∆∞·ªõc ti·ªÉu (<0.5ml/kg/h)\n'
                          '  - ƒêau v√πng th·∫Øt l∆∞ng hai b√™n\n'
                          '  - N∆∞·ªõc ti·ªÉu c√≥ m√°u vi th·ªÉ\n'
                          '‚Ä¢ Tri·ªáu ch·ª©ng MU·ªòN (24-48h):\n'
                          '  - Thi·ªÉu ni·ªáu ho·∫∑c v√¥ ni·ªáu\n'
                          '  - Ph√π chi d∆∞·ªõi, ph√π ph·ªïi\n'
                          '  - R·ªëi lo·∫°n √Ω th·ª©c (uremia)\n'
                          '  - Kh√≥ th·ªü, tƒÉng JVP\n\n'
                          'üß™ C·∫≠n l√¢m s√†ng:\n'
                          '‚Ä¢ Ch·ª©c nƒÉng th·∫≠n:\n'
                          '  - Creatinine tƒÉng >1.5 l·∫ßn baseline\n'
                          '  - Urea tƒÉng nhanh (>20mg/dL/ng√†y)\n'
                          '  - eGFR gi·∫£m >25%\n'
                          '‚Ä¢ N∆∞·ªõc ti·ªÉu:\n'
                          '  - Protein ni·ªáu +++ (>3g/24h)\n'
                          '  - H·ªìng c·∫ßu 10-50/HPF\n'
                          '  - Tr·ª• h·∫°t, tr·ª• s√°p\n'
                          '  - T·ª∑ tr·ªçng n∆∞·ªõc ti·ªÉu <1.010\n'
                          '‚Ä¢ ƒêi·ªán gi·∫£i:\n'
                          '  - TƒÉng K+ (>5.5mmol/L)\n'
                          '  - TƒÉng PO4, gi·∫£m Ca++\n'
                          '  - Acid h√≥a chuy·ªÉn h√≥a\n\n'
                          'üö® X·ª≠ l√Ω suy th·∫≠n c·∫•p trong THA:\n'
                          '1. GI·∫¢M HUY·∫æT √ÅP (M·ª§C TI√äU CH√çNH):\n'
                          '   ‚Ä¢ Gi·∫£m 20-25% trong 1h ƒë·∫ßu\n'
                          '   ‚Ä¢ Kh√¥ng gi·∫£m qu√° nhanh (<25%)\n'
                          '   ‚Ä¢ Thu·ªëc ch·ªçn: Nicardipine IV 5-15mg/h\n\n'
                          '2. H·ªñ TR·ª¢ TH·∫¨N:\n'
                          '   ‚Ä¢ B√π d·ªãch c·∫©n th·∫≠n (tr√°nh qu√° t·∫£i)\n'
                          '   ‚Ä¢ L·ª£i ti·ªÉu n·∫øu c√≥ ph√π: Furosemide 40-80mg IV\n'
                          '   ‚Ä¢ Theo d√µi c√¢n b·∫±ng n∆∞·ªõc ƒëi·ªán gi·∫£i\n\n'
                          '3. TR√ÅNH C√ÅC Y·∫æU T·ªê G√ÇY H·∫†I:\n'
                          '   ‚Ä¢ Tr√°nh ACE-I/ARB trong giai ƒëo·∫°n c·∫•p\n'
                          '   ‚Ä¢ Tr√°nh thu·ªëc ƒë·ªôc th·∫≠n (NSAIDs, Aminoglycosides)\n'
                          '   ‚Ä¢ Tr√°nh ch·∫•t c·∫£n quang n·∫øu kh√¥ng c·∫ßn thi·∫øt\n\n'
                          '4. L·ªåC TH·∫¨N KHI C·∫¶N:\n'
                          '   ‚Ä¢ Ch·ªâ ƒë·ªãnh tuy·ªát ƒë·ªëi:\n'
                          '     - K+ >6.5 mmol/L kh√¥ng ƒë√°p ·ª©ng ƒëi·ªÅu tr·ªã\n'
                          '     - Acid h√≥a n·∫∑ng pH <7.1\n'
                          '     - Ph√π ph·ªïi kh√¥ng ƒë√°p ·ª©ng l·ª£i ti·ªÉu\n'
                          '     - Tri·ªáu ch·ª©ng ƒë·ªôc t·ªë ni·ªáu n·∫∑ng\n'
                          '   ‚Ä¢ Ph∆∞∆°ng th·ª©c:\n'
                          '     - ∆Øu ti√™n CRRT (·ªïn ƒë·ªãnh huy·∫øt ƒë·ªông)\n'
                          '     - HD gi√°n ƒëo·∫°n n·∫øu c·∫ßn nhanh\n'
                          '   ‚Ä¢ M·ª•c ti√™u: ·ªîn ƒë·ªãnh huy·∫øt ƒë·ªông, c√¢n b·∫±ng ƒëi·ªán gi·∫£i',
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // Clinical Cases
                  _buildProtocolCard(
                    title: '8. CA L√ÇM S√ÄNG ƒêI·ªÇN H√åNH',
                    icon: Icons.local_hospital,
                    color: Colors.brown,
                    child: Column(
                      children: [
                        _buildClinicalCase(
                          'Ca 1: THA Kh·∫©n tr∆∞∆°ng',
                          'Nam 45t, HA 190/110, ƒëau ƒë·∫ßu nh·∫π, kh√¥ng c√≥ tri·ªáu ch·ª©ng th·∫ßn kinh',
                          'X·ª≠ l√Ω: Ngh·ªâ ng∆°i + Amlodipine 5mg. Theo d√µi HA m·ªói 30p. Gi·∫£m HA t·ª´ t·ª´ trong 24h.',
                          Colors.orange.shade50,
                        ),
                        const SizedBox(height: 12),
                        _buildClinicalCase(
                          'Ca 2: THA C·∫•p c·ª©u',
                          'N·ªØ 60t, HA 210/130, ƒëau ƒë·∫ßu d·ªØ d·ªôi, nh√¨n m·ªù, co gi·∫≠t',
                          'X·ª≠ l√Ω: Nicardipine IV 5mg/h. Theo d√µi monitor. CT n√£o, x·ª≠ l√Ω ph√π n√£o n·∫øu c√≥.',
                          Colors.red.shade50,
                        ),
                        const SizedBox(height: 12),
                        _buildClinicalCase(
                          'Ca 3: Ph√π ph·ªïi c·∫•p',
                          'Nam 55t, HA 200/120, kh√≥ th·ªü, ran ·∫©m 2 ph·ªïi',
                          'X·ª≠ l√Ω:\n1. Nitroglycerin 10-20mcg/min IV (gi·∫£m ti·ªÅn t·∫£i c√≥ ki·ªÉm so√°t)\n2. Furosemide 80mg IV (l·ª£i ti·ªÉu)\n3. Th·ªü O2, theo d√µi SpO2\n4. Sau ·ªïn ƒë·ªãnh: Nicardipine IV ƒë·ªÉ ki·ªÉm so√°t HA\n5. Si√™u √¢m tim ƒë√°nh gi√° EF',
                          Colors.blue.shade50,
                        ),
                      ],
                    ),
                  ),
                  
                  const SizedBox(height: 16),
                  
                  // References
                  _buildProtocolCard(
                    title: '9. T√ÄI LI·ªÜU THAM KH·∫¢O',
                    icon: Icons.library_books,
                    color: Colors.blueGrey,
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        _buildReferenceItem(
                          '1. 2017 ACC/AHA Hypertension Guidelines',
                          'Management of High Blood Pressure in Adults',
                        ),
                        _buildReferenceItem(
                          '2. ESC/ESH 2018 Guidelines',
                          'Arterial Hypertension Management',
                        ),
                        _buildReferenceItem(
                          '3. H∆∞·ªõng d·∫´n ch·∫©n ƒëo√°n v√† ƒëi·ªÅu tr·ªã THA',
                          'B·ªô Y t·∫ø Vi·ªát Nam 2018',
                        ),
                        _buildReferenceItem(
                          '4. Critical Care Medicine',
                          'Hypertensive Crisis Management - ICU Protocols',
                        ),
                        _buildReferenceItem(
                          '5. Emergency Medicine Clinics',
                          'Acute Hypertensive Episodes in ED',
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildProtocolCard({
    required String title,
    required IconData icon,
    required Color color,
    required Widget child,
  }) {
    return Container(
      width: double.infinity,
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(12),
        boxShadow: [
          BoxShadow(
            color: Colors.grey.withValues(alpha: 0.1),
            spreadRadius: 1,
            blurRadius: 6,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        children: [
          Container(
            width: double.infinity,
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: color.withValues(alpha: 0.1),
              borderRadius: const BorderRadius.only(
                topLeft: Radius.circular(12),
                topRight: Radius.circular(12),
              ),
            ),
            child: Row(
              children: [
                Icon(icon, color: color, size: 24),
                const SizedBox(width: 12),
                Expanded(
                  child: Text(
                    title,
                    style: TextStyle(
                      fontSize: 15,
                      fontWeight: FontWeight.bold,
                      color: color,
                    ),
                  ),
                ),
              ],
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(16),
            child: child,
          ),
        ],
      ),
    );
  }

  Widget _buildClassificationItem(String title, String description, Color bgColor, Color textColor) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: bgColor,
        borderRadius: BorderRadius.circular(8),
        border: Border.all(color: textColor.withValues(alpha: 0.3)),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.bold,
              color: textColor,
            ),
          ),
          const SizedBox(height: 4),
          Text(
            description,
            style: TextStyle(
              fontSize: 13,
              color: textColor,
              height: 1.3,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildChecklistItem(String text) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Icon(
            Icons.check_circle_outline,
            color: Colors.blue.shade600,
            size: 20,
          ),
          const SizedBox(width: 8),
          Expanded(
            child: Text(
              text,
              style: const TextStyle(
                fontSize: 14,
                height: 1.4,
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildTestCard(String title, List<String> tests, Color bgColor) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: bgColor,
        borderRadius: BorderRadius.circular(8),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: const TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 8),
          ...tests.map((test) => Padding(
            padding: const EdgeInsets.symmetric(vertical: 2),
            child: Row(
              children: [
                Container(
                  width: 4,
                  height: 4,
                  decoration: const BoxDecoration(
                    color: Colors.grey,
                    shape: BoxShape.circle,
                  ),
                ),
                const SizedBox(width: 8),
                Expanded(
                  child: Text(
                    test,
                    style: const TextStyle(fontSize: 13),
                  ),
                ),
              ],
            ),
          )),
        ],
      ),
    );
  }

  Widget _buildTreatmentStep(String step, String description) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            width: 24,
            height: 24,
            decoration: BoxDecoration(
              color: AppColors.primary,
              shape: BoxShape.circle,
            ),
            child: Center(
              child: Text(
                step,
                style: const TextStyle(
                  color: Colors.white,
                  fontSize: 12,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
          ),
          const SizedBox(width: 12),
          Expanded(
            child: Text(
              description,
              style: const TextStyle(
                fontSize: 14,
                height: 1.4,
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildComplicationCard(String title, String management, Color bgColor, IconData icon) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: bgColor,
        borderRadius: BorderRadius.circular(8),
      ),
      child: Row(
        children: [
          Icon(icon, color: Colors.grey.shade700, size: 28),
          const SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: const TextStyle(
                    fontSize: 14,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                const SizedBox(height: 4),
                Text(
                  management,
                  style: const TextStyle(
                    fontSize: 13,
                    height: 1.3,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildMonitoringItem(String parameter, String frequency) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6),
      child: Row(
        children: [
          Container(
            width: 8,
            height: 8,
            decoration: BoxDecoration(
              color: Colors.indigo.shade400,
              shape: BoxShape.circle,
            ),
          ),
          const SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  parameter,
                  style: const TextStyle(
                    fontSize: 14,
                    fontWeight: FontWeight.w500,
                  ),
                ),
                const SizedBox(height: 2),
                Text(
                  frequency,
                  style: TextStyle(
                    fontSize: 13,
                    color: Colors.grey.shade600,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildDiscussionPoint(String title, String content) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: const TextStyle(
            fontSize: 14,
            fontWeight: FontWeight.bold,
            color: Colors.deepOrange,
          ),
        ),
        const SizedBox(height: 8),
        Text(
          content,
          style: const TextStyle(
            fontSize: 13,
            height: 1.4,
          ),
        ),
      ],
    );
  }

  Widget _buildClinicalCase(String title, String presentation, String management, Color bgColor) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(14),
      decoration: BoxDecoration(
        color: bgColor,
        borderRadius: BorderRadius.circular(10),
        border: Border.all(color: Colors.grey.shade300),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Icon(Icons.person, color: Colors.brown.shade600, size: 20),
              const SizedBox(width: 8),
              Expanded(
                child: Text(
                  title,
                  style: TextStyle(
                    fontSize: 15,
                    fontWeight: FontWeight.bold,
                    color: Colors.brown.shade700,
                  ),
                ),
              ),
            ],
          ),
          const SizedBox(height: 8),
          Text(
            'Tr√¨nh b√†y: $presentation',
            style: const TextStyle(
              fontSize: 13,
              height: 1.3,
            ),
          ),
          const SizedBox(height: 6),
          Text(
            management,
            style: TextStyle(
              fontSize: 13,
              height: 1.3,
              color: Colors.grey.shade700,
              fontStyle: FontStyle.italic,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildReferenceItem(String title, String subtitle) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            width: 6,
            height: 6,
            margin: const EdgeInsets.only(top: 6),
            decoration: BoxDecoration(
              color: Colors.blueGrey.shade400,
              shape: BoxShape.circle,
            ),
          ),
          const SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: const TextStyle(
                    fontSize: 14,
                    fontWeight: FontWeight.w500,
                  ),
                ),
                Text(
                  subtitle,
                  style: TextStyle(
                    fontSize: 12,
                    color: Colors.grey.shade600,
                    height: 1.3,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAlgorithmStep({
    required String stepNumber,
    required String title,
    required String content,
    required Color color,
    bool isFirst = false,
    bool isLast = false,
  }) {
    return Container(
      width: double.infinity,
      child: Column(
        children: [
          if (!isFirst)
            Container(
              width: 2,
              height: 16,
              color: Colors.grey.shade400,
            ),
          Row(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Container(
                width: 32,
                height: 32,
                decoration: BoxDecoration(
                  color: color,
                  shape: BoxShape.circle,
                  border: Border.all(color: Colors.white, width: 3),
                  boxShadow: [
                    BoxShadow(
                      color: color.withValues(alpha: 0.3),
                      blurRadius: 8,
                      offset: const Offset(0, 2),
                    ),
                  ],
                ),
                child: Center(
                  child: Text(
                    stepNumber,
                    style: const TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                      fontSize: 14,
                    ),
                  ),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Container(
                  padding: const EdgeInsets.all(12),
                  decoration: BoxDecoration(
                    color: color.withValues(alpha: 0.1),
                    borderRadius: BorderRadius.circular(8),
                    border: Border.all(color: color.withValues(alpha: 0.3)),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        title,
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          fontSize: 13,
                          color: color,
                        ),
                      ),
                      const SizedBox(height: 4),
                      Text(
                        content,
                        style: const TextStyle(
                          fontSize: 12,
                          height: 1.3,
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
          if (!isLast)
            Container(
              width: 2,
              height: 16,
              color: Colors.grey.shade400,
            ),
        ],
      ),
    );
  }

  Widget _buildDecisionBranch({
    required String condition,
    required String outcome,
    required Color color,
    required bool isEmergency,
  }) {
    return Container(
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: color.withValues(alpha: 0.1),
        borderRadius: BorderRadius.circular(8),
        border: Border.all(
          color: color,
          width: isEmergency ? 2 : 1,
        ),
      ),
      child: Column(
        children: [
          Text(
            condition,
            textAlign: TextAlign.center,
            style: const TextStyle(
              fontSize: 11,
              height: 1.2,
            ),
          ),
          const SizedBox(height: 8),
          Icon(
            Icons.arrow_downward,
            color: color,
            size: 16,
          ),
          const SizedBox(height: 8),
          Container(
            padding: const EdgeInsets.symmetric(vertical: 6, horizontal: 8),
            decoration: BoxDecoration(
              color: color,
              borderRadius: BorderRadius.circular(6),
            ),
            child: Text(
              outcome,
              textAlign: TextAlign.center,
              style: const TextStyle(
                color: Colors.white,
                fontWeight: FontWeight.bold,
                fontSize: 10,
                height: 1.2,
              ),
            ),
          ),
        ],
      ),
    );
  }
}
